<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props"
            Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')"/>
    <Import Project="environment.props" Condition="Exists('environment.props')"/>
    
    <PropertyGroup>
        <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
        <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
        <ProjectGuid>{4D35EB3F-E4D0-4FD9-9258-9066A85F1BFE}</ProjectGuid>
        <OutputType>Library</OutputType>
        <AppDesignerFolder>Properties</AppDesignerFolder>
        <RootNamespace>DiscordConnector</RootNamespace>
        <AssemblyName>DiscordConnector</AssemblyName>
        <FileAlignment>512</FileAlignment>
        <Nullable>enable</Nullable>    
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <LangVersion>latest</LangVersion>
        <Optimize>true</Optimize>
        <Deterministic>true</Deterministic>
        <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
        <TargetFrameworkVersion>v4.6.2</TargetFrameworkVersion>
    </PropertyGroup>
    
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
        <PlatformTarget>AnyCPU</PlatformTarget>
        <DebugSymbols>true</DebugSymbols>
        <DebugType>full</DebugType>
        <Optimize>false</Optimize>
        <OutputPath>bin\Debug\</OutputPath>
        <DefineConstants>DEBUG;TRACE</DefineConstants>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
        <PlatformTarget>AnyCPU</PlatformTarget>
        <DebugType>pdbonly</DebugType>
        <Optimize>true</Optimize>
        <OutputPath>bin\Release\</OutputPath>
        <DefineConstants>TRACE</DefineConstants>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    </PropertyGroup>
    
    <!--    Attempt to automatically find Valheim installation -->
    <Choose>
        <When Condition="($(OS) == 'Unix' OR $(OS) == 'OSX') AND $(GamePath) == ''">
            <PropertyGroup>
                <GamePath Condition="!Exists('$(GamePath)')">$(HOME)/.steam/steam/steamapps/common/Valheim</GamePath>
                <GamePath Condition="!Exists('$(GamePath)')">$(HOME)/Library/Application Support/Steam/steamapps/common/Valheim/Contents/MacOS</GamePath>
                <CorlibPath Condition="!Exists('$(CorlibPath)') AND Exists('$(GamePath)')">$(GamePath)\valheim_Data\Managed</CorlibPath>
                <CorlibPath Condition="!Exists('$(CorlibPath)')">$(GamePath)/unstripped_corelib</CorlibPath>
            </PropertyGroup>
        </When>
        <When Condition="($(OS) == 'Windows_NT') AND $(GamePath) == ''">
            <PropertyGroup>
                <GamePath Condition="!Exists('$(GamePath)')">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Steam App 892970', 'InstallLocation', null, RegistryView.Registry64, RegistryView.Registry32))</GamePath>
                <_SteamLibraryPath>$([MSBuild]::GetRegistryValueFromView('HKEY_CURRENT_USER\SOFTWARE\Valve\Steam', 'SteamPath', null, RegistryView.Registry32))</_SteamLibraryPath>
                <GamePath Condition="!Exists('$(GamePath)') AND '$(_SteamLibraryPath)' != ''">$(_SteamLibraryPath)\steamapps\common\Valheim</GamePath>
                <GamePath Condition="!Exists('$(GamePath)') AND Exists('$(ValheimGamePath)')">$(ValheimGamePath)</GamePath>
                <GamePath Condition="!Exists('$(GamePath)')">C:\Program Files\Steam\steamapps\common\Valheim</GamePath>
                <GamePath Condition="!Exists('$(GamePath)')">C:\Program Files (x86)\Steam\steamapps\common\Valheim</GamePath>
                <GamePath Condition="!Exists('$(GamePath)')">D:\SteamLibrary\steamapps\common\Valheim</GamePath>
                <BepInExPath Condition="!Exists('$(BepInExPath)')AND Exists('$(GamePath)')">$(GamePath)\BepInEx</BepInExPath>
                <CorlibPath Condition="!Exists('$(CorlibPath)') AND Exists('$(GamePath)')">$(GamePath)\valheim_Data\Managed</CorlibPath>
                <CorlibPath Condition="!Exists('$(CorlibPath)') AND Exists('$(GamePath)')">$(GamePath)\unstripped_corlib</CorlibPath>
                <PublicizedAssembliesPath Condition="!Exists('$(PublicizedAssembliesPath)') AND Exists('$(GamePath)')">$(GamePath)\valheim_Data\Managed\publicized_assemblies</PublicizedAssembliesPath>
                <AfterTargets Condition="'$(AfterTargets)' == ''">ILRepacker</AfterTargets>
            </PropertyGroup>
        </When>
    </Choose>

    <PropertyGroup>
        <BepInExPath Condition="!Exists('$(BepInExPath)')AND Exists('$(GamePath)')">$(GamePath)\BepInEx</BepInExPath>
        <CorlibPath Condition="!Exists('$(CorlibPath)')  AND Exists('$(GamePath)')">$(GamePath)\valheim_Data\Managed</CorlibPath>
        <CorlibPath Condition="!Exists('$(CorlibPath)')  AND Exists('$(GamePath)')">$(GamePath)\unstripped_corlib</CorlibPath>
        <PublicizedAssembliesPath Condition="!Exists('$(PublicizedAssembliesPath)') AND Exists('$(GamePath)')">$(GamePath)\valheim_Data\Managed\publicized_assemblies</PublicizedAssembliesPath>
    </PropertyGroup>
  
    <ItemGroup Condition="'$(TargetFramework.TrimEnd(`0123456789`))' == 'net'">
      <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.3"
                        PrivateAssets="all" />
    </ItemGroup>  
 
    <!--    References to the Valheim Libraries, Harmony-->
    <ItemGroup>
        <Reference Include="0Harmony">
            <HintPath>$(BepInExPath)\core\0Harmony.dll</HintPath>
        </Reference>
        <Reference Include="assembly_guiutils">
            <HintPath>$(PublicizedAssembliesPath)\assembly_guiutils_publicized.dll</HintPath>
        </Reference>
        <Reference Include="assembly_utils">
            <HintPath>$(PublicizedAssembliesPath)\assembly_utils_publicized.dll</HintPath>
        </Reference>
        <Reference Include="assembly_valheim">
            <HintPath>$(PublicizedAssembliesPath)\assembly_valheim_publicized.dll</HintPath>
        </Reference>
        <Reference Include="BepInEx">
            <HintPath>$(BepInExPath)\core\BepInEx.dll</HintPath>
        </Reference>
        <Reference Include="mscorlib" />
        <Reference Include="ServerSync">
            <HintPath>Libs\ServerSync.dll</HintPath>
        </Reference>
        <Reference Include="SoftReferenceableAssets">
            <HintPath>$(PublicizedAssembliesPath)\SoftReferenceableAssets_publicized.dll</HintPath>
        </Reference>
        <Reference Include="System"/>
        <Reference Include="System.Buffers, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
          <HintPath>$(PackageRoot)system.buffers\4.5.1\lib\net461\System.Buffers.dll</HintPath>
        </Reference>
        <Reference Include="System.Core"/>
        <Reference Include="System.Data"/>
        <Reference Include="System.Xml"/>
        <Reference Include="UnityEngine">
            <HintPath>$(CorlibPath)\UnityEngine.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.AssetBundleModule">
            <HintPath>$(CorlibPath)\UnityEngine.AssetBundleModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.CoreModule">
            <HintPath>$(CorlibPath)\UnityEngine.CoreModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.ImageConversionModule">
            <HintPath>$(CorlibPath)\UnityEngine.ImageConversionModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.IMGUIModule">
            <HintPath>$(CorlibPath)\UnityEngine.IMGUIModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.InputLegacyModule">
            <HintPath>$(CorlibPath)\UnityEngine.InputLegacyModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.ParticleSystemModule">
            <HintPath>$(CorlibPath)\UnityEngine.ParticleSystemModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.PhysicsModule">
            <HintPath>$(CorlibPath)\UnityEngine.PhysicsModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.TextRenderingModule">
            <HintPath>$(CorlibPath)\UnityEngine.TextRenderingModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.UI">
            <HintPath>$(CorlibPath)\UnityEngine.UI.dll</HintPath>
        </Reference>
        <Reference Include="Unity.TextMeshPro">
            <HintPath>$(GamePath)\valheim_Data\Managed\Unity.TextMeshPro.dll</HintPath>
        </Reference>
    </ItemGroup>
    
    <ItemGroup>
        <Compile Include="Config\ActivePlayersAnnouncementConfig.cs" />
        <Compile Include="Config\ConfigWatcher.cs" />
        <Compile Include="Config\CustomLeaderBoardConfig.cs" />
        <Compile Include="Config\ExtraWebhookConfig.cs" />
        <Compile Include="Config\LeaderboardConfig.cs" />
        <Compile Include="Config\MainConfig.cs" />
        <Compile Include="Config\MessagesConfig.cs" />
        <Compile Include="Config\PluginConfig.cs" />
        <Compile Include="Config\TogglesConfig.cs" />
        <Compile Include="Config\VariableConfig.cs" />
        <Compile Include="DiscordApi.cs" />
        <Compile Include="EventWatcher.cs" />
        <Compile Include="Handlers.cs" />
        <Compile Include="Leaderboards\ActivePlayers.cs" />
        <Compile Include="Leaderboards\Composer.cs" />
        <Compile Include="Leaderboards\Leaderboard.cs" />
        <Compile Include="Logger.cs" />
        <Compile Include="MessageTransformer.cs" />
        <Compile Include="Patches\ChatPatches.cs" />
        <Compile Include="Patches\EnvManPatches.cs" />
        <Compile Include="Patches\EventPatches.cs" />
        <Compile Include="Patches\GamePatches.cs" />
        <Compile Include="Patches\ZNetPatches.cs" />
        <Compile Include="Plugin.cs" />
        <Compile Include="Properties\AssemblyInfo.cs"/>
        <Compile Include="Records\Classes\CountResult.cs" />
        <Compile Include="Records\Classes\PlayerNames.cs" />
        <Compile Include="Records\Classes\Position.cs" />
        <Compile Include="Records\Classes\SimpleStat.cs" />
        <Compile Include="Records\Database.cs" />
        <Compile Include="Records\RecordsHelper.cs" />
        <Compile Include="Utility.cs" />
        <Compile Include="Webhook.cs" />
    </ItemGroup>
  
    <ItemGroup>
      <Content Include="DoPrebuild.props" />
      <Content Include="environment.props" />
      <Content Include="ILRepack.targets" />
      <Content Include="Libs\ServerSync.dll" />
      <Content Include="Metadata\DiscordConnector-Nexus.readme" />
      <Content Include="Metadata\icon.png" />
      <Content Include="Metadata\icon.svg" />
      <Content Include="Metadata\icon2.svg" />
      <Content Include="Metadata\icon3.svg" />
      <Content Include="Metadata\icon4.svg" />
      <Content Include="Metadata\manifest.json" />
      <Content Include="Metadata\README.md" />
      <Content Include="Metadata\thunderstore.toml" />
      <Content Include="Packages\.gitkeep" />
      <Content Include="Packages\Nexus\.gitkeep" />
      <Content Include="Packages\Thunderstore\.gitkeep" />
      <Content Include="UpdateManifest.ps1" />
    </ItemGroup>
    
    <ItemGroup>
      <PackageReference Include="ILRepack.Lib.MSBuild.Task" Version="2.0.37">
        <PrivateAssets>all</PrivateAssets>
        <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      </PackageReference>
      <PackageReference Include="JotunnLib" Version="2.23.2" />
      <PackageReference Include="LiteDB" Version="5.0.21" />
      <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
    </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.2">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets"/>
  
    <Target Name="GetAssemblyVersion" AfterTargets="$(AfterTargets)">
        <GetAssemblyIdentity AssemblyFiles="$(TargetPath)">
            <Output TaskParameter="Assemblies" ItemName="Targets"/>
        </GetAssemblyIdentity>
        <ItemGroup>
            <AssemblyVersions Include="@(Targets->'%(Version)')"/>
        </ItemGroup>
        <Error Text="Failed to get Assembly Version." Condition="'%(AssemblyVersions.Identity)' == ''"/>
        <PropertyGroup>
            <AssemblyVersion>%(AssemblyVersions.Identity)</AssemblyVersion>
            <Major>$(AssemblyVersion.Split('.')[0])</Major>
            <Minor>$(AssemblyVersion.Split('.')[1])</Minor>
            <Patch>$(AssemblyVersion.Split('.')[2])</Patch>
            <PackageName>$(AssemblyName)_v$(Major).$(Minor).$(Patch)</PackageName>
            <PackageVersion>$(Major).$(Minor).$(Patch)</PackageVersion>
            <VersionString>$(Major).$(Minor).$(Patch)</VersionString>
            <PackageDir>$(ProjectDir)\Metadata\$(PackageName)</PackageDir>
        </PropertyGroup>
    </Target>
    <Target Name="CopyOutputDLL" AfterTargets="GetAssemblyVersion">
        <Error Text="DLL not found in target directory." Condition="!Exists('$(TargetDir)$(AssemblyName).dll')"/>
        <Copy SourceFiles="$(TargetDir)$(AssemblyName).dll" DestinationFolder="$(CopyOutputDLLPath)" OverwriteReadOnlyFiles="true" Condition="Exists('$(CopyOutputDLLPath)')"/>
        <Copy SourceFiles="$(TargetDir)$(AssemblyName).dll" DestinationFolder="$(CopyOutputDLLPath2)" OverwriteReadOnlyFiles="true" Condition="Exists('$(CopyOutputDLLPath2)')"/>
        <Copy SourceFiles="$(TargetDir)$(AssemblyName).dll" DestinationFolder="$(CopyOutputDLLPath3)" OverwriteReadOnlyFiles="true" Condition="Exists('$(CopyOutputDLLPath3)')"/>
    </Target>
    <Target Name="CopyReadMeToTSFolder" AfterTargets="CopyOutputDLL" Condition=" ('$(Configuration)|$(Platform)' == 'Release|AnyCPU') And ('$(OS)' == 'Windows_NT') ">
        <Copy SourceFiles="$(ProjectDir)\Metadata\README.md" DestinationFolder="$(PackageDir)" OverwriteReadOnlyFiles="true"/>
    </Target>
    
    <Target Name="UpdateManifestVersion" AfterTargets="CopyReadmeToTSFolder" Condition=" ('$(Configuration)|$(Platform)' == 'Release|AnyCPU') And ('$(OS)' == 'Windows_NT') ">
        <ItemGroup>
            <ManifestFile Include="$(ProjectDir)Metadata\manifest.json"/>
        </ItemGroup>
        <Message Text="ManifestFile is @(ManifestFile)"/>
        <Message Text="Updating version number in Metadata\manifest.json" Condition="Exists(@(ManifestFile))"/>
        <Exec Command="powershell.exe -ExecutionPolicy Bypass -Command &quot;&amp; { &amp; '$(ProjectDir)UpdateManifest.ps1' -manifestFile '@(ManifestFile)' -versionString '$(PackageVersion)' }&quot;"/>
    </Target>
    <Target Name="MakeThunderstorePackage" AfterTargets="UpdateManifestVersion" Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
        <Error Text="manifest.json not found in Thunderstore directory." Condition="!Exists('$(ProjectDir)\Metadata\manifest.json')"/>
        <Error Text="icon.png not found in Thunderstore directory. Please note that Thunderstore requires this image to be 256x256 in dimension" Condition="!Exists('$(ProjectDir)\Metadata\icon.png')"/>
        <ItemGroup>
            <PackageFiles Include="$(TargetDir)$(AssemblyName).dll" Condition="Exists('$(TargetDir)$(AssemblyName).dll')"/>
            <PackageFiles Include="$(ProjectDir)\Metadata\manifest.json" Condition="Exists('$(ProjectDir)\Metadata\manifest.json')"/>
            <PackageFiles Include="$(ProjectDir)\Metadata\icon.png" Condition="Exists('$(ProjectDir)\Metadata\icon.png')"/>
            <PackageFiles Include="$(ProjectDir)\Metadata\README.md" Condition="Exists('$(ProjectDir)\Metadata\README.md')"/>
        </ItemGroup>
        <MakeDir Directories="$(PackageDir)"/>
        <Copy SourceFiles="@(PackageFiles)" DestinationFolder="$(PackageDir)"/>
        <Copy SourceFiles="$(ProjectDir)..\docs\changelog.md" DestinationFiles="$(PackageDir)\CHANGELOG.md" />
        <ZipDirectory SourceDirectory="$(PackageDir)" DestinationFile="Packages\Thunderstore\$(PackageName).zip" Overwrite="true"/>
        <RemoveDir Directories="$(PackageDir)"/>
    </Target>
    <Target Name="MakeNexusPackage" AfterTargets="MakeThunderstorePackage" Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
        <MakeDir Directories="$(ProjectDir)\Nexus"/>
        <ItemGroup>
            <NexusPackageFiles Include="$(TargetDir)$(AssemblyName).dll;"/>
        </ItemGroup>
        <MakeDir Directories="$(PackageDir)"/>
        <Copy SourceFiles="@(NexusPackageFiles)" DestinationFolder="$(PackageDir)"/>
        <ZipDirectory SourceDirectory="$(PackageDir)" DestinationFile="Packages\Nexus\$(PackageName).zip" Overwrite="true"/>
        <RemoveDir Directories="$(PackageDir)"/>
    </Target>

</Project>
