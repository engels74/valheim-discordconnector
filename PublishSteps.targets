<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <Target Name="DetermineVersion" AfterTargets="ILRepacker">
        <GetAssemblyIdentity AssemblyFiles="$(TargetPath)">
            <Output TaskParameter="Assemblies" ItemName="Targets"/>
        </GetAssemblyIdentity>
        <ItemGroup>
            <AssemblyVersions Include="@(Targets->'%(Version)')"/>
        </ItemGroup>
        <Error Text="Failed to get Assembly Version." Condition="'%(AssemblyVersions.Identity)' == ''"/>
        <PropertyGroup>
            <AssemblyVersion>%(AssemblyVersions.Identity)</AssemblyVersion>
            <Major>$(AssemblyVersion.Split('.')[0])</Major>
            <Minor>$(AssemblyVersion.Split('.')[1])</Minor>
            <Patch>$(AssemblyVersion.Split('.')[2])</Patch>
            <PackageName>$(AssemblyName)_v$(Major).$(Minor).$(Patch)</PackageName>
            <PackageVersion>$(Major).$(Minor).$(Patch)</PackageVersion>
            <VersionString>$(Major).$(Minor).$(Patch)</VersionString>
            <PackageDir>$(PackageOutputPath)$(PackageName)</PackageDir>
            <ChangelogFilename>changelog$(AssemblyName.Replace('DiscordConnector', '')).md</ChangelogFilename>
            <IsClientAssembly Condition=" '$(AssemblyName)' != '' and $(AssemblyName.IndexOf('-Client')) != -1 ">true</IsClientAssembly>
        </PropertyGroup>
    </Target>

    <Target Name="CopyOutputDLL" AfterTargets="DetermineVersion">
        <Error Text="DLL not found in target directory." Condition="!Exists('$(TargetDir)$(AssemblyName).dll')"/>
        <Copy SourceFiles="$(TargetDir)$(AssemblyName).dll" DestinationFolder="$(CopyClientPluginPath)" OverwriteReadOnlyFiles="true" Condition="Exists('$(CopyClientPluginPath)') AND '$(IsClientAssembly)' == 'true'"/>
        <Copy SourceFiles="$(TargetDir)$(AssemblyName).dll" DestinationFolder="$(CopyServerPLuginPath)" OverwriteReadOnlyFiles="true" Condition="Exists('$(CopyServerPLuginPath)') AND '$(IsClientAssembly)' != 'true'"/>
        <Copy SourceFiles="$(TargetDir)$(AssemblyName).dll" DestinationFolder="$(PackageDir)" OverwriteReadOnlyFiles="true"/>
    </Target>

    <Target Name="CopyReadMeToTSFolder" AfterTargets="CopyOutputDLL" Condition=" ('$(Configuration)|$(Platform)' == 'Release|AnyCPU') And ('$(OS)' == 'Windows_NT') ">
        <Copy SourceFiles="$(ProjectDir)\Metadata\README.md" DestinationFolder="$(PackageDir)" OverwriteReadOnlyFiles="true"/>
        <Copy SourceFiles="$(ProjectDir)..\docs\changelog.md" DestinationFolder="$(PackageDir)" OverwriteReadOnlyFiles="true"/>
    </Target>

    <Target Name="UpdateManifestVersion" AfterTargets="CopyReadmeToTSFolder" Condition=" ('$(Configuration)|$(Platform)' == 'Release|AnyCPU') And ('$(OS)' == 'Windows_NT') ">
        <ItemGroup>
            <ManifestFile Include="$(ProjectDir)Metadata\manifest.json"/>
        </ItemGroup>
        <Message Text="ManifestFile is @(ManifestFile)" Importance="high"/>
        <Message Text="Updating version number in Metadata\manifest.json" Condition="Exists(@(ManifestFile))" Importance="high"/>
        <Exec Command="powershell.exe -ExecutionPolicy Bypass -Command &quot;&amp; { &amp; '$(ProjectDir)\..\UpdateManifest.ps1' -manifestFile '@(ManifestFile)' -versionString '$(PackageVersion)' }&quot;" Condition="'$(OS)' == 'Windows_NT'"/>
        <Exec Command="bash $(ProjectDir)/../UpdateManifest.sh @(ManifestFile) $(PackageVersion)" Condition="'$(OS)' != 'Windows_NT'"/>
        <ItemGroup>
            <TomlFile Include="$(ProjectDir)Metadata\thunderstore.toml"/>
        </ItemGroup>
        <Message Text="Toml manifest is @(TomlFile)" Importance="high"/>
        <Message Text="Updating version number in Metadata\thunderstore.toml" Condition="Exists(@(TomlFile))" Importance="high"/>
        <Exec Command="powershell.exe -ExecutionPolicy Bypass -Command &quot;&amp; { &amp; '$(ProjectDir)\..\UpdateThunderstoreToml.ps1' -tomlFile '@(TomlFile)' -versionString '$(PackageVersion)' }&quot;" Condition="'$(OS)' == 'Windows_NT'"/>
        <Exec Command="bash $(ProjectDir)/../UpdateThunderstoreToml.sh @(TomlFile) $(PackageVersion)" Condition="'$(OS)' != 'Windows_NT'"/>
    </Target>

    <Target Name="MakeThunderstorePackage" AfterTargets="UpdateManifestVersion" Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
        <Error Text="manifest.json not found in Thunderstore directory." Condition="!Exists('$(ProjectDir)\Metadata\manifest.json')"/>
        <Error Text="icon.png not found in Thunderstore directory. Please note that Thunderstore requires this image to be 256x256 in dimension" Condition="!Exists('$(ProjectDir)\Metadata\icon.png')"/>
        <ItemGroup>
            <PackageFiles Include="$(TargetDir)$(AssemblyName).dll" Condition="Exists('$(TargetDir)$(AssemblyName).dll')"/>
            <PackageFiles Include="$(ProjectDir)\Metadata\manifest.json" Condition="Exists('$(ProjectDir)\Metadata\manifest.json')"/>
            <PackageFiles Include="$(ProjectDir)\Metadata\icon.png" Condition="Exists('$(ProjectDir)\Metadata\icon.png')"/>
            <PackageFiles Include="$(ProjectDir)\Metadata\README.md" Condition="Exists('$(ProjectDir)\Metadata\README.md')"/>
        </ItemGroup>
        <Copy SourceFiles="@(PackageFiles)" DestinationFolder="$(PackageDir)"/>
        <Copy SourceFiles="$(ProjectDir)..\docs\$(ChangelogFilename)" DestinationFiles="$(PackageDir)\CHANGELOG.md"/>
        <Message Importance="high" Text="Exporting to $(ThunderstoreDestination)"/>
        <ZipDirectory SourceDirectory="$(PackageDir)" DestinationFile="$(ThunderstoreDestination)$(PackageName).zip" Overwrite="true"/>
        <RemoveDir Directories="$(PackageDir)"/>
    </Target>

    <Target Name="MakeNexusPackage" AfterTargets="MakeThunderstorePackage" Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
        <MakeDir Directories="$(ProjectDir)\Nexus"/>
        <ItemGroup>
            <NexusPackageFiles Include="$(TargetDir)$(AssemblyName).dll;"/>
            <NexusPackageFiles Include="$(ProjectDir)\Metadata\DiscordConnector-Nexus.readme;"/>
        </ItemGroup>
        <MakeDir Directories="$(PackageDir)"/>
        <Copy SourceFiles="@(NexusPackageFiles)" DestinationFolder="$(PackageDir)"/>
        <Message Importance="high" Text="Exporting to $(ProjectDir)\..\Packages\Nexus\"/>
        <ZipDirectory SourceDirectory="$(PackageDir)" DestinationFile="$(NexusDestination)$(PackageName).zip" Overwrite="true"/>
        <RemoveDir Directories="$(PackageDir)"/>
    </Target>

</Project>